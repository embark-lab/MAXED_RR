---
title: "MAXED Registered Report Results"
format: html
---

```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(dplyr)
library(knitr)
library(kableExtra)
```

# Results

## Preliminary Analysis

*We will provide sample descriptive statistics for both ED and HC groups on variables of interest (e.g., age, ED diagnosis, BMI, compulsive exercise, Eating Disorder Examination subscales).*

Descriptive statistics for the sample are presented in @tbl-descriptives. Overall, the ED and HC group were well matched on key demographic variables as well as free-living activity levels. The ED group had higher levels of disordered eating symptoms and higher CET Total, CET Weight Control, and CET Avoidance scores compared to the HC group.

```{r, echo=FALSE, message=FALSE, warning=FALSE}
#| label: tbl-descriptives
#| tbl-cap: Descriptive Statistics Across Eating Disorder (ED) and Healthy Control (HC) Groups

load("results/demo_vars.RData")
rows_to_bold <- which(demo_vars_1$p < 0.05) 

# make p-value in scientific notation, with 2 decimals
demo_vars_1$p <- formatC(demo_vars_1$p, format = "e", digits = 2)


knitr::kable(demo_vars_1) |> 
   row_spec(rows_to_bold, bold = TRUE) %>%  # Make specific rows bold
 # kable(table.attr = 'data-quarto-disable-processing="true"') %>%
  kable_styling(full_width = FALSE, bootstrap_options = "striped") |>
  group_rows(
    group_label = "SEXUAL IDENTITY (N)",
    start_row = 1,
    end_row = 5
  ) |>
  group_rows(
    group_label = "GENDER IDENTITY (N)",
    start_row = 6,
    end_row = 9
  ) |>
  group_rows(
    group_label = "ETHNICITY (N)",
    start_row = 10,
    end_row = 16) |>
  group_rows(
    group_label = "AGE - Mean (SD)",
    start_row = 17,
    end_row = 17
  ) |>
group_rows(
  group_label = "WEIGHT - Mean (SD)",
  start_row = 18,
  end_row = 19
) |>
  group_rows(
    group_label = "ED SYMPTOMS - Mean(SD)",
    start_row = 20,
    end_row = 24
  ) |>
  group_rows(
    group_label = "ACTIGRAPH - Mean (SD)",
    start_row = 25,
    end_row = 26
  ) |>
    group_rows(
      group_label = "SP Exercise - Mean (SD)",
      start_row = 27,
      end_row = 30
    ) |>
  group_rows(
    group_label = "EX FUNCTIONS",
    start_row = 31,
    end_row = 42)


```

We also compared affect ratings and disordered eating urges before and after milkshake ingestion on Day A to clarify the degree to which these variables were impacted my milkshake ingestion. Results are presented in Supplemental @tbl-milkshake. Individuals with EDs reported feeling increased enthusiasm and decreases in fatigue after milkshake ingestion, along with increased urges to restrict, vomit, and exercise.

## **Aim 1: Feasiblity**

*We will confirm feasibility of our exercise-based tasks via a) study dropout at all timepoints, b) adverse events, c) completion rates of exercise task on Day B, d) completion rates of milkshake task across ED and HC participants. Over the course of the study, we expect both ED and HC groups to meet thresholds of \< 20% dropout, zero adverse events, and \> 80% task completion.*

```{r, echo=FALSE, message=FALSE, warning=FALSE}
load("results/Aim_1_results.RData")
```

Full study flow is outlined in Supplemental @tbl-aim1. There were `r total_screenings` total screenings completed. Of these, `r ineligible_screens` were ineligible and `r intake_total` went on to complete intakes. Of those who were eligible after intake, `r sum(intake_drop)` chose not to enroll, and the most common reason for not enrolling was cited as time constraints. Ultimately, `r attendance_table[[4]]`/40 individuals who enrolled in the study completed all study visits. There were no serious adverse events during the study. One participant became lightheaded after blood draw, but this resolved quickly with rest. `r day_b_ex_complete`% of participants who engaged in the Day B exercise task completed the task. On Day both days A and C, `r round(milk_complete_a, 0)`% participants completed drinking the milkshake, with one participant not completing the shake on each day. This was a different participant on Day A vs. Day C. In once instance, the participant finished 31% of the milkshake, in the other instance, the participant finished 63% of the milkshake.

## **Aim 2: Variability in Exercise Response**

*We will characterize changes during exercise in state body image, mood, and biological markers in both ED and HC groups; we will specifically characterize mean levels of, and variability in, biobehavioral response to exercise across the ED and HC groups. We will evaluate exercise-induced changes in DA, 5-HT, BDNF, leptin, and eCB biomarkers for the Prescribed Exercise Task. Shifts in affect, body image, and biomarkers will be evaluated descriptively with measures of central tendency, skew, and variance. We will further characterize shifts in affect and body image through linear mixed effect models.*

Specific models tested are noted in @tbl-params.

| Model Name | Parameters |
|----|----|
| **Overall Model: Affect and Body Image Variables** | DV \~ 1 + Age + Group + Time + BMI\*Condition + Time\*Condition + Time\*Group\*Condition + (1+Time |
| **Within ED: Affect and Body Image Variables** | DV \~ 1 + Age + Time + BMI\*Condition + Time\*Condition + Time\*Condition + (1+Time |
| **Overall Biomarker Model** | Biomarker \~ 1 + Age + Group + Time + BMI\*Condition + Time\*Condition + (1 + Time |
| **Within ED: Biomarkers** | Biomarker \~ 1 + Age + Time + BMI\*Condition + Time\*Condition + (1 + Time |
| **Heterogeneity of Variance across Groups in Exercise Response** | DV \~ 1 + Age + Group + Time + Time x Group, random = list(id = pdDiag(form = \~ Group)), weights = varIdent(form = \~ 1 |

: General Models and Parameters {#tbl-params}

We estimated change over time using descriptives, and also ran overall and within ED models using the `lme4` package. To evaluate heterogeneity of variance, we incorporated a random effect of group into a model with age, time, group, and group x time fixed effects. We then compared model fit of this model to the model without a random effect of group. To examine potential heterogeneity of within person, a level-1 random effect was then incorporated into the model and compared against a model with between-person (level 2) random effects only.

### Affect

#### Descriptives

Affective change across group and condition are presented in @fig-ChangePlots-1. Visual depiction of raw changes in affect measurements during exercise across groups is presented in Supplemental @fig-AffectChange along with variance in affect across group and condition. Specific values for average levels of change across groups (30 min vs. BL), maximum increases and maximum decreases from baseline, and variance are presented in Supplemental @tbl-affectChange. Patterns of results indicate that individuals in the ED group consistently feel more positive and less negative emotion increases across the 30 mins of exercise. Fatigue increases in the ED group may be delayed, relative to HC.

```{r, echo=FALSE, message=FALSE, warning=FALSE}
#| label: fig-ChangePlots
#| fig-cap: "Description of Body Image and Affect Changes During Exercise" 
#| fig-subcap:
#|   - "Affective Change during Exercise (30min vs BL)"
#|   - "Body Image Change during Exercise (30min vs BL)"
#| layout-ncol: 1
#| 
knitr::include_graphics("figs/2.affect/affect_change_plot.png")
knitr::include_graphics("figs/3.body_image/biss_change_30_exercise.png")

```

#### Overall Model

Model fit indices for each variable and task are presented in Supplemental @tbl-AffectModFit.

```{r, echo=FALSE, message=FALSE, warning=FALSE}
load('results/affect_model_fit_indices.Rdata')
# identify highest and lowest marginal R2 values within Overall
overall_affect_models <- Affect_model_fit_indices %>%
  filter(Model == "Overall") 
ed_affect_models <- Affect_model_fit_indices %>%
  filter(Model == "ED")
```

Marginal $R^2$ values indicate that fixed effects specified in the current models are, together, accounting for `r round(min(overall_affect_models$R2.Marginal)*100,0)`-`r round(max(overall_affect_models$R2.Marginal)*100,0)`% of variance in affect during the course of the task, depending on task and variable. Results from each variable in the overall model (see @tbl-params) are presented in Supplemental @tbl-affect with estimated marginal means for each timepoint presented in Supplemental @fig-affectemm. Significant Time x Condition interactions indicate that, across both ED and Control groups, participants tended to feel increased fatigue and reduced calmness during exercise, relative to rest.

As noted, the current pilot trial was not sufficiently powered to detect small-to-moderate three-way interactions. One Group x Time x Condition emerged at nominal level of significance (*p* \< 0.05) - feeling Crummy in the Self-Paced Task. The ED group exhibited higher negative affect (feeling crummy) in the Rest condition of the Self-Paced Task (i.e. when asked to ingest a milkshake and then rest), which may to be mitigated by the opportunity to exercise (see Supplemental @fig-affectemm). While not detected in this pilot sample, there is also possible trend toward increased enthusiasm in the ED group in the Prescribed Task, relative to a decrease in enthusiasm in the control group.

Evaluations of the between and within subject variance across groups via introducing additional random effects and comparing nested models indicated potentially higher within subject variance in fatigue and calmenss during the Prescribed Task and enthusiasm and crumminess during the Self-Paced Task among the ED group, relative to the HC group (see Supplemental @tbl-affectHOV).

#### Within ED Group Model

Model fit indices for each variable and task are presented in Supplmental @tbl-AffectModFit. Marginal $R^2$ values indicate that fixed effects specified in the current models are, together, accounting for `r round(min(ed_affect_models$R2.Marginal)*100,0)`-`r round(max(ed_affect_models$R2.Marginal)*100,0)`% of variance in affect during the course of the task, depending on task and variable. Results within the ED group are presented in Supplemental @tbl-affectED. A Time x Condition effect emerged for calmness during the Prescribed Task and fatigue during the Self-Paced Task. Individuals with EDs reported feeling less calm and more fatigued over time during exercise vs. rest. Further, older age was associated with feeling less crummy during both tasks and less Fatigued during the Prescribed task. There were no BMI or BMI x Condition effects, indicating limited impact of BMI on affect during exercise among the ED group.

### Body Image

#### Descriptives

Average levels of change from 0 to 30 minutes is presented in @fig-ChangePlots-2. Visual depiction of raw changes in body image changes during exercise across groups is presented in Supplemental @fig-BISSChange, along with variance in body image across groups are presented. All specific values for average levels of change across groups (30 min vs. BL), maximum increases and maximum decreases from baseline, and variance are presented in Supplemental @tbl-BISSChange. Patterns of results indicate that individuals in the ED group consistently feel worse about their bodies, although exercise does have some impact on body image. In all measures, the ED group had greater improvements in body image during exercise, as compared to controls. Change indicators suggest (ED vs. HC Cohen's d \> .2) that individuals with EDs specifically feel better about their weight, looks, and appearance, as well as feeling better on average and feeling better than the average person after self-paced exercise and better on average after prescribed exercise. Effect sizes favored self-paced vs. prescribed exercise -- particularly for feeling better about weight and average scores -- in the ED group.

#### Overall Model

```{r, echo=FALSE, message=FALSE, warning=FALSE}
load('results/biss_model_fit_indices.Rdata')
# identify highest and lowest marginal R2 values within Overall
overall_biss_models <- biss_model_fit_indices %>%
  filter(Model == "Overall") 
ed_biss_models <- biss_model_fit_indices %>%
  filter(Model == "ED")
```

Model fit indices for each variable and task are presented in Supplmental @tbl-BISSModFit. Marginal $R^2$ values indicate that fixed effects specified in the current models are, together, accounting for `r round(min(overall_biss_models$R2.Marginal)*100,0)`-`r round(max(overall_biss_models$R2.Marginal)*100,0)`% of variance in body image during exercise across variable and task. Results from each variable in the overall model (see @tbl-params) are presented in Supplemental @tbl-bodyimage with estimated marginal means for each timepoint presented in @fig-bissemm. Group was a significant predictor of all body image items -- with the HC group feeling better about their body, relative to the ED group. Higher BMI was associated with feeling less attractive than the average person, but there were no significant BMI x Condition effects, indicating that exercise did not influence this effect. There was an overall time effect several items during the Self-Paced Task, with individuals generally feeling better over time. There was also a Group x Time interaction for the BISS average and Weight during the Prescribed Task, such that individuals in the ED group had greater increases in average BISS scores along with feelings about their Weight relative to controls. Two Time x Condition x Group interactions emerged. Coupled with an interpretation of marginal means (Supplemental @fig-bissemm) , these interactions indicate that the ED group had more positive increases in feelings about their weight and overall body image during self-paced exercise, relative to the HC group. Evaluations of variance across the two groups also indicates more within person variance in the ED group, as compared to the HC group, on most BISS measurements during exercise (see Supplemental @tbl-bissHOV).

#### Within ED Group Model

Model fit indices for each variable and task within the ED group are presented in Supplmental @tbl-BISSModFit. Marginal $R^2$ values indicate that fixed effects specified in the current models are, together, accounting for `r round(min(ed_biss_models$R2.Marginal)*100,0)`-`r round(max(ed_biss_models$R2.Marginal)*100,0)`% of variance in body image during exercise across variable and task. Results for each model within the ED group are presented in Supplemental @tbl-biss-ed. A Time effect emerged for Weight and Appearance in the Prescribed Task -- individuals felt better about these aspects of body image as the task progressed, regardless of condition (Exercise vs. Rest).

### Biomarker Response

#### Descriptives

Biomakers were obtained for only a portion of the sample as this study served as a pilot trial and included ongoing phlebotemy training for study team members. Blood was therefore obtained only when a phlebotomist was available, and precautions were taken to ensure that participants were not overly distressed by the procedure. As such, the sample size for biomarker data (N = 58 successful blood draws with assays that passed initial quality control measures across pre- and post-exercise and pre- and post-rest; with complete data from 9 ED and 7 control participants) is smaller than the overall sample size. A visual depiction of biomarker response is presented in @fig-biomarker. Detailed responses are presented in @fig-biomarker1.

```{r, echo = FALSE, warning = FALSE}
#| label: fig-biomarker
#| fig-cap: "Biomarker Measurements Before and After Exercise"

knitr::include_graphics("figs/4.biomarkers/Assay_summary_results_exonly.png")

```

#### Overall Model

Full t-test results across both exercise and rest conditions along with tests of heterogeneity of variance in exercise condition response across the ED and Control group using each outcome approach are presented in Supplementary @tbl-BiomarkerChange.

#### Within ED Group Model

Full t-test results across both exercise and rest conditions using each outcome approach are presented in Supplementary @tbl-BiomarkerChangeED. Although there were no significant differences between the ED and Control group in the overall model, effect sizes indicate that BNDF may show specific increases in the ED group post-exercise, relative to the Control group.

## **Aim 3: Exercise Response Correlations**

*Within the ED group, we will calculate correlations between acute exercise parameters/response and ED-related measures. We will conduct a linear regression to obtain slope estimates for affect and body image shifts for each individual, within exercise condition. We will also conduct a linear regression estimating post-biomarker scores across all individuals with EDs in the exercise condition, saving residuals.*

*We will quantify Pearson correlations with 95% confidence intervals between these slope estimates, biomarker residuals, Self-Paced Task exercise parameters (e.g., average bike speed, HR), functions of exercise subscales, self-report of compulsive exercise, and EDE global scores. We will estimate Pearson correlations and 95% confidence intervals for these correlations.*

### Exercise Response

```{r, echo=FALSE}
load('results/Exercise_Response_Correlation_Matrix.RData')

load('results/Corr_CI_Results_control.RData')
load('results/Corr_CI_Results_ed.RData')

columns_to_reverse <- as.vector(unique(cor_ci_results_full$var1))

cor_ci_results <- cor_ci_results_full |> 
  # drop p-values
  dplyr::select(-p_value, -significance, -group) |> 
  # round to 2 decimal places using sprintf
  dplyr::mutate(across(c(estimate, ci_lower, ci_upper), ~sprintf("%.2f", .))) |> 
# put estimate and ci(95%) in the same column
  dplyr::mutate(estimate = paste(estimate, ' (', ci_lower, ', ', ci_upper, ')', sep = '')) |>
  dplyr::select(-ci_lower, -ci_upper) |> 
  rename('Correlation (95% CI)' = estimate) |> 
  # order by var2
  dplyr::arrange(var2)

# Pivot the data to wide format
cor_ci_results_wide <- cor_ci_results |>
  tidyr::pivot_wider(names_from = var2, values_from = 'Correlation (95% CI)')

# order by var1
cor_ci_results_wide <- cor_ci_results_wide |>
  dplyr::arrange(var1)

cor_ci_results_wide <- cor_ci_results_wide %>%
  slice(n():1)

data_part <- cor_ci_results_wide %>% select(-var1)  # Assuming 'var1' is your row identifier

# Transpose the data part
cor_ci_results_wide <- as.data.frame(t(data_part))
colnames(cor_ci_results_wide) <-columns_to_reverse


```

Correlations between acute exercise response variables are presented in Supplemental @fig-exresponse, and full correlation data with 95% CIs is presented in Supplemental @tbl-exresponsecorrs. Average zero-order $r^2$ between exercise response variables in the control group is `r round(mean(cor_ci_results_control$estimate^2, na.rm = TRUE), 2)` and in the ED group is `r round(mean(cor_ci_results_ed$estimate^2, na.rm = TRUE), 2)`, indicating slightly stronger association between exercise response variables in the ED group, relative to the control group, with little evidence of collinearity across exercise response measures -- indicating an independence and potential unique utility of exercise response measures across the three domains of assessment. Of the number of correlations tested, 6% reached p \< 0.05 significance for controls (close to this alpha), while 14% reached p \< 0.05 significance for the ED group, further supporting greater coherence of exercise response measures in the ED group.

### Correlations with Additional Variables

```{r, echo = FALSE}
load('results/exercise_corrs_cleaned.Rdata')
corrs_long_ed <- cors_long |> 
  filter(group == 'ED')
corrs_long_control = cors_long |> 
  filter(group == 'Control')

```

Correlations between body image response to exercise with key variables of interest are presented in @fig-exresponse2. Full correlation data with 95% CIs is presented in @tbl-exresponsecorrs2. Average zero-order $r^2$ between acute exercise response and key variables of interest in the control group is `r round(mean(corrs_long_control$correlation^2, na.rm = TRUE), 2)` and in the ED group is `r round(mean(corrs_long_ed$correlation^2, na.rm = TRUE), 2)`. For only those in the ED group only, greater body image response to acute exercise was associated with key variables, including higher self-reported drive for muscularity, lower social positive reinforcement of exercise, and lower body mass index. More improvement in feelings about Shape during exercise were *negatively* associated with EDE global scores for controls.

```{r, echo=FALSE}
#| label: fig-exresponse2
#| fig-cap: Correlations between Exercise Response and Individual Difference Variables

knitr::include_graphics("figs/5.correlations/3.3.4.Corr_Plot_Mini.png")
```

# Supplement

Supplemental tables are available in the [Supplemental Tables Excel Workbook](Supplemental_Tables.xlsx). Supplemental tables and figures are also presented below

### Preliminary Analysis

```{r echo=FALSE, message=FALSE, warning=FALSE}
#| label: tbl-milkshake
#| tbl-cap: "PAAS Urges, FCQ, and BISS Ratings Before and After Milkshake Ingestion"

load("results/milkshake_table.RData")
rows_to_bold <- which(milkshake_results_a$`p-value` < 0.05) 

knitr::kable(milkshake_results_a) |> 
  row_spec(rows_to_bold, bold = TRUE) 

```

### Study Flow

| **Inflow/Retention** | Outflow | Reason |
|----|----|----|
| **Eligibility Screenings (n = `r total_screenings`)** | Ineligible screenings (n = `r ineligible_screens + 8`) | Duplicates (n = 8)<br> Outside of age range (n = `r ineligible_reasons[[1]]`)<br> Binge eating reported (n = `r ineligible_reasons[[2]]`)<br> Unable to attend in-person visits (n = `r ineligible_reasons[[3]]`)<br> Medical Exclusion (n = `r ineligible_reasons[[4]]`)<br> Blood Draw (n = `r ineligible_reasons[[5]]`)<br> Other (n = `r ineligible_reasons[[6]]`) |
| **Intake (n = `r sum(intake_dx)`)** | Did not schedule Intake (n = `r 230-sum(ineligible_reasons)-sum(intake_dx)`) |   |
|   | Ineligible intakes (n = `r sum(intake_ineligible_reasons)`) | Binge Eating Disorder (n = `r intake_ineligible_reasons[[1]]`)<br> ARFID (n = `r intake_ineligible_reasons[[2]]`)<br> Bipolar 1 Disorder (n = `r intake_ineligible_reasons[[3]]`)<br> Other (n = `r intake_ineligible_reasons[[4]]`) |
|   | Did not enroll (n = `r sum(intake_drop)` - HC: `r dropout_table[[1]]`, ED: `r sum(dropout_table[[2]], dropout_table[[3]], dropout_table[[4]])`) | No reason provided (n = `r intake_drop[[1]]`)<br> Time constraint (n = `r intake_drop[[2]]`)<br> Unforeseen circumstances (n = `r intake_drop[[3]]`) |
| **Day A (n = `r attendance_table[[1]]`)** |  |   |
| **Day B (n = `r attendance_table[[2]]`)** |  |   |
| **Day C (n = `r attendance_table[[3]]`)** | Visit dropout (n = `r 40-attendance_table[[3]]`) | No reason provided (n = 1) |
| **Completed Study (n = `r attendance_table[[4]]` - HC: 20, ED: 19)** |  |   |

: **Study Flow** {#tbl-aim1}

### Affect

```{r, echo=FALSE, message=FALSE, warning=FALSE}
#| label: fig-AffectChange
#| fig-cap: "Description of Affective Changes During Exercise" 
#| fig-subcap:
#|   - "Affect Change over Exercise - Raw Values"
#|   - "Affective Variance during Exercise" 
#| layout-ncol: 1
knitr::include_graphics("figs/2.affect/affect_plot_ex.png")
knitr::include_graphics("figs/2.affect/affect_variance_plot.png")

```

```{r echo=FALSE}
#| label: tbl-affectChange
#| tbl-cap: 'Variability in Affect Changes Across Groups'

load('Results/affect_descriptives.RData')

affect_descriptives$`Cohen's d` <- as.numeric(affect_descriptives$`Cohen's d`)
rows_to_bold <- which(affect_descriptives$`Cohen's d`^2 > 0.04)

affect_descriptives %>%
  kable(format = "html", escape = FALSE) %>%
  row_spec(rows_to_bold, bold = TRUE) %>%  # Make specific rows bold
  kable_styling(full_width = FALSE)
```

**Note**. Rows with Cohen's d \> .2 (or \< -.2) bolded to indicate potential differences between ED and HC on measures of exercise response variability.

```{r, echo=FALSE, message=FALSE, warning=FALSE}
#| label: tbl-affect
#| tbl-cap: "Overall Model - Affect over time"

library(knitr)
library(kableExtra)
library(dplyr)

load('results/affect_models.RData')

affect_models_summary <- affect_models_summary |> 
  mutate(Estimate = sprintf("%.3f", Estimate),
         `Std. Error` = sprintf("%.3f", `Std. Error`),
         df = round(df, 0),  # Assuming you still want to round the degrees of freedom
         `t value` = sprintf("%.3f", `t value`)) 
# get `Pr(>|t|)` as numeric -- not scientific notation
affect_models_summary$`Pr(>|t|)` <- as.numeric(affect_models_summary$`Pr(>|t|)`)
rows_to_bold <- which(affect_models_summary$`Pr(>|t|)` < 0.05)
# get out of scientific notation if p-value is greater than .001
affect_models_summary$`Pr(>|t|)` <- ifelse(affect_models_summary$`Pr(>|t|)` > 0.001, sprintf("%.3f", affect_models_summary$`Pr(>|t|)`), sprintf("%.2e", affect_models_summary$`Pr(>|t|)`))


# Create the table with kable and kableExtra styling
affect_models_summary %>%
  knitr::kable(format = "html", escape = FALSE) %>%
  kableExtra::row_spec(rows_to_bold, bold = TRUE) %>%  # Make specific rows bold
  kableExtra::kable_styling(full_width = FALSE)
```

**Note**. Rest Condition and Control Group set as reference, ED and Exercise set as Comparison. Positive effects represent higher scores for ED Group and Exercise Condition.

```{r, echo=FALSE, message=FALSE, warning=FALSE}
#| label: tbl-AffectModFit
#| tbl-cap: "Model Fit Indicies for Affect Variables"

library(knitr)
library(kableExtra)
library(dplyr)

load('results/Affect_model_fit_indices.RData')

AMFI <- Affect_model_fit_indices |> 
  mutate(across(where(is.numeric), ~ sprintf("%.2f", .))) |> 
  # remove log liklihood
  select(-Log_Lik)
        
# Create the table with kable and kableExtra styling
AMFI %>%
  knitr::kable(format = "html", escape = FALSE) %>%
  kableExtra::kable_styling(full_width = FALSE)
```

```{r, echo=FALSE, message=FALSE, warning=FALSE}
#| label: fig-affectemm
#| fig-cap: "Estimated Marginal Means of Affect During Exercise" 
#| fig-subcap:
#|   - "Prescribed"
#|   - "Self-Paced" 
#| layout-ncol: 1
knitr::include_graphics("figs/2.affect/affect_emmeans_prescribed.png")
knitr::include_graphics("figs/2.affect/affect_emmeans_SelfPaced.png")
```

```{r, echo=FALSE, message=FALSE, warning=FALSE}
#| label: tbl-affectHOV
#| tbl-cap: "Heterogeneity of Variance in Affect Measurements During Exercise across Groups"

library(knitr)
library(kableExtra)
library(dplyr)
load('results/affect_hov_results.RData')

# Assuming affect_hov_results is your target data frame
affect_hov_results[] <- lapply(affect_hov_results, function(x) if(is.numeric(x)) sprintf("%.2f", x) else x)

rows_to_bold <- which(affect_hov_results$`p-value` < 0.05)

 
# Create the table with kable and kableExtra styling
affect_hov_results %>%
  kable(format = "html", escape = FALSE) %>%
  row_spec(rows_to_bold, bold = TRUE) %>%  # Make specific rows bold
  kable_styling(full_width = FALSE)
```

```{r, echo=FALSE, message=FALSE, warning=FALSE}
#| label: tbl-affectED
#| tbl-cap: "ED - Affect over time"

library(knitr)
library(kableExtra)
library(dplyr)
load('results/affect_models.RData')

table1 <- affect_models_ed_summary |> 
  mutate(Estimate = sprintf("%.3f", Estimate),
         `Std. Error` = sprintf("%.3f", `Std. Error`),
         df = round(df, 0),  # Assuming you still want to round the degrees of freedom
         `t value` = sprintf("%.3f", `t value`))

table1$`Pr(>|t|)` <- as.numeric(table1$`Pr(>|t|)`)
rows_to_bold <- which(table1$`Pr(>|t|)` < 0.05)

        
table1$`Pr(>|t|)` =  sprintf("%.2e", table1$`Pr(>|t|)`)  # Scientific notation for p-values


# Create the table with kable and kableExtra styling
table1 %>%
  kable(format = "html", escape = FALSE) %>%
  row_spec(rows_to_bold, bold = TRUE) %>%  # Make specific rows bold
  kable_styling(full_width = FALSE)
```

**Note**. Rest Condition and Control Group set as reference, ED and Exercise set as Comparison. Positive effects represent higher scores for ED Group and Exercise Condition

### Body Image

```{r, echo=FALSE, message=FALSE, warning=FALSE}
#| label: fig-BISSChange
#| fig-cap: "Description of Body Image Changes During Exercise" 
#| fig-subcap:
#|   - "Body Image Change during Exercise"
#|   - "Body Image Change during Exercise (30min vs BL)"
#|   - "Body Image Variance during Exercise"
#| layout-ncol: 1

knitr::include_graphics("figs/3.body_image/biss_plot_exercise.png")
knitr::include_graphics('figs/3.body_image/biss_change_variance.png')
```

```{r, echo = FALSE}
#| label: tbl-BISSChange
#| tbl-cap: 'Variability in BISS Changes Across Groups'

load('Results/BISS_descriptives.RData')

BISS_descriptives$`Cohen's d` <- as.numeric(BISS_descriptives$`Cohen's d`)
rows_to_bold <- which(BISS_descriptives$`Cohen's d`^2 > 0.04)

BISS_descriptives %>%
  kable(format = "html", escape = FALSE) %>%
  row_spec(rows_to_bold, bold = TRUE) %>%  # Make specific rows bold
  kable_styling(full_width = FALSE)
```

**Note**. Rows with Cohen's d \> .2 (or \< -.2) bolded to indicate potential differences between ED and HC on measures of exercise response variability.

```{r, echo=FALSE, message=FALSE, warning=FALSE}
#| label: tbl-bodyimage
#| tbl-cap: "Overall Model - BISS over time" 
library(knitr)
library(kableExtra)
library(dplyr)
load('results/biss_models.RData')

table1 <- biss_models_summary |> 
  mutate(Estimate = sprintf("%.3f", Estimate),
         `Std. Error` = sprintf("%.3f", `Std. Error`),
         df = round(df, 0),  # Assuming you still want to round the degrees of freedom
         `t value` = sprintf("%.3f", `t value`))

table1$`Pr(>|t|)` <- as.numeric(table1$`Pr(>|t|)`)
rows_to_bold <- which(table1$`Pr(>|t|)` < 0.05)

        
table1$`Pr(>|t|)` =  sprintf("%.2e", table1$`Pr(>|t|)`)  # Scientific notation for p-values


# Create the table with kable and kableExtra styling
table1 %>%
  kable(format = "html", escape = FALSE) %>%
  row_spec(rows_to_bold, bold = TRUE) %>%  # Make specific rows bold
  kable_styling(full_width = FALSE)

```

**Note**. Rest Condition and Control Group set as reference, ED and Exercise set as Comparison. Positive effects represent higher scores for ED Group and Exercise Condition

```{r, echo=FALSE, message=FALSE, warning=FALSE}
#| label: tbl-biss-ed
#| tbl-cap: "ED - BISS over time"
library(knitr)
library(kableExtra)
library(dplyr)
load('results/biss_models.RData')

table1 <- biss_models_ed_summary |> 
  mutate(Estimate = sprintf("%.3f", Estimate),
         `Std. Error` = sprintf("%.3f", `Std. Error`),
         df = round(df, 0),  # Assuming you still want to round the degrees of freedom
         `t value` = sprintf("%.3f", `t value`))

table1$`Pr(>|t|)` <- as.numeric(table1$`Pr(>|t|)`)
rows_to_bold <- which(table1$`Pr(>|t|)` < 0.05)

        
table1$`Pr(>|t|)` =  sprintf("%.2e", table1$`Pr(>|t|)`)  # Scientific notation for p-values


# Create the table with kable and kableExtra styling
table1 %>%
  kable(format = "html", escape = FALSE) %>%
  row_spec(rows_to_bold, bold = TRUE) %>%  # Make specific rows bold
  kable_styling(full_width = FALSE)
```

**Note**. Rest Condition set as reference. Positive effects represent higher scores for Exercise Condition. For Prescribed condition and 'Weight' outcome, model did not converge originally due to 3 individuals producing floor effects (Low initial scores with no variance). After removing these three individuals, model converged and these results are presented.

```{r, echo=FALSE, warning=FALSE, message=FALSE}
#| label: tbl-BISSModFit
#| tbl-cap: "Fit Indices for BISS Models"


load('results/biss_model_fit_indices.RData')

BMFI <- biss_model_fit_indices |> 
  mutate(across(where(is.numeric), ~ sprintf("%.2f", .))) |> 
  # remove log liklihood
  select(-Log_Lik)
        
# Create the table with kable and kableExtra styling
BMFI %>%
  knitr::kable(format = "html", escape = FALSE) %>%
  kableExtra::kable_styling(full_width = FALSE)

```

```{r, echo=FALSE, message=FALSE, warning=FALSE}
#| label: tbl-bissHOV
#| tbl-cap: "Heterogeneity of Variance in BISS Measurements During Exercise across Groups"

library(knitr)
library(kableExtra)
library(dplyr)
load('results/biss_hov_results.RData')

# Assuming affect_hov_results is your target data frame
biss_hov_results[] <- lapply(biss_hov_results, function(x) if(is.numeric(x)) sprintf("%.2f", x) else x)

rows_to_bold <- which(biss_hov_results$`p-value` < 0.05)

 
# Create the table with kable and kableExtra styling
biss_hov_results %>%
  kable(format = "html", escape = FALSE) %>%
  row_spec(rows_to_bold, bold = TRUE) %>%  # Make specific rows bold
  kable_styling(full_width = FALSE)
```

```{r, echo=FALSE, message=FALSE, warning=FALSE}
#| label: fig-bissemm
#| fig-cap: "BISS Estimated Marginal Means During Exercise" 
#| fig-subcap:
#|   - "Prescribed"
#|   - "Self-Paced" 
#| layout-ncol: 2
knitr::include_graphics("figs/3.body_image/biss_emmeans_prescribed.png")
knitr::include_graphics("figs/3.body_image/biss_emmeans_selfpaced.png")
```

### Biomarkers

```{r, echo = FALSE, warning = FALSE}
#| label: fig-biomarker1 
#| fig-cap: "Biomarker Measurements Before and After Exercise and Rest"
#| fig-subcap:
#| - "Individual-Level" #|
#| - "Group Aggregates" #|
#| - "Forest Plots - Control vs. ED" #|
#|- "Forest Plots - ED Group" 
#| layout-ncol: 1 

knitr::include_graphics("figs/4.biomarkers/Assay_results.png") 
knitr::include_graphics("figs/4.biomarkers/Assay_summary_results.png") 
knitr::include_graphics("figs/4.biomarkers/Exercise_Biomarker_ForestPlot.png") 
knitr::include_graphics("figs/4.biomarkers/ED_Biomarker_ForestPlot.png")
```

```{r, echo = FALSE}
#| label: tbl-BiomarkerChange
#| tbl-cap: Differences in Biomarker Measurements Across ED and HC Groups

load(file = 'Results/supplement_ttable.RData')
load('results/hov_results_biomarkers.RData')

# rename Test Statistic column to 'Levene's Test', rename 'p.value' to 'Levene's P', and rename 'df.residual' to 'Levene df'
hov_results_biomarkers <- hov_results_biomarkers |> 
  rename(`Levene's Test` = `Test Statistic`, `Levene's P` = `p.value`, `Levene df` = `df.residual`, Outcome = Time) |> 
  # add column that says Condition == 'Exercise'
  mutate(Condition = 'Exercise') |>
  mutate(`Levene's Test` = sprintf("%.2f", `Levene's Test`),
         `Levene's P` = sprintf("%.2f", `Levene's P`),
         `Levene df` = round(`Levene df`, 0))

# join the two tables by Assay and Outcome
supplement_ttable <- supplement_ttable |> 
  left_join(hov_results_biomarkers, by = c('Assay', 'Outcome', 'Condition'))


knitr::kable(supplement_ttable)
```

```{r, echo = FALSE}
#| label: tbl-BiomarkerChangeED
#| tbl-cap: Paired-sample t-tests for differences between Pre- and Post- Exercise Biomarkers in the ED group

load(file = 'results/ed_biomarkers.RData')

knitr::kable(ed_biomarkers)
```

### Exercise Response Correlations

```{r, echo=FALSE}
#| label: fig-exresponse
#| fig-cap: Exercise Response Correlations among Control and ED groups

knitr::include_graphics("figs/5.correlations/exercise_response_correlation_matrix.png")
```

```{r, echo = FALSE}
#| label: tbl-exresponsecorrs
#| tbl-cap: Correlations (and 95% CI) Between Exercise Response Variables

knitr::kable(cor_ci_results_wide)
```

Note. Correlations are presented with 95% confidence intervals. ED Group below the diagiagonal, HC Group above the diagonal.

```{r, echo = FALSE}
#| label: tbl-exresponsecorrs2
#| tbl-cap: Correlations (and 95% CI) Between Exercise Response Variables and Key Variables 

corrs_long <- cors_long |> 
  dplyr::filter(!is.na(correlation)) |> 
  # drop p-values
  dplyr::select(-c(p_value, significance)) |> 
  # round to 2 decimal places using sprintf
  dplyr::mutate(across(c(correlation, ci_lower, ci_upper), ~sprintf("%.2f", .))) |> 
# put estimate and ci(95%) in the same column
  dplyr::mutate(correlation = paste(correlation, ' (', ci_lower, ', ', ci_upper, ')', sep = '')) |>
  dplyr::select(-ci_lower, -ci_upper) |> 
  rename('Correlation (95% CI)' = correlation)  |> 
  # rename variable 2 column to 'Key Variable'
  dplyr::rename(Key_Variable = variable2) |>
  # rename variable 1 column to 'Ex Response Variable'
  dplyr::rename(Ex_Response_Variable = variable1) 

# Split into four dataframes based on group and condition
corrs_long_control_SP <- corrs_long |> 
  dplyr::filter(group == 'Control', Condition == 'SelfPaced') |> 
  dplyr::select(-group, -Condition)

corrs_long_control_P <- corrs_long |>
  dplyr::filter(group == 'Control', Condition == 'Prescribed') |>
  dplyr::select(-group, -Condition)

corrs_long_ed_SP <- corrs_long |>
  dplyr::filter(group == 'ED', Condition == 'SelfPaced') |>
  dplyr::select(-group, -Condition)

corrs_long_ed_P <- corrs_long |>
  dplyr::filter(group == 'ED', Condition == 'Prescribed') |>
  dplyr::select(-group, -Condition)


# pivot each one wider
corrs_wide_control_SP <- corrs_long_control_SP |> 
  tidyr::pivot_wider(names_from = Ex_Response_Variable, values_from = 'Correlation (95% CI)') |> 
  # add back in the group and condition columns
  dplyr::mutate(group = 'Control', Condition = 'SelfPaced')

corrs_wide_control_P <- corrs_long_control_P |>
  tidyr::pivot_wider(names_from = Ex_Response_Variable, values_from = 'Correlation (95% CI)') |>
  dplyr::mutate(group = 'Control', Condition = 'Prescribed')

corrs_wide_ed_SP <- corrs_long_ed_SP |>
  tidyr::pivot_wider(names_from = Ex_Response_Variable, values_from = 'Correlation (95% CI)') |>
  dplyr::mutate(group = 'ED', Condition = 'SelfPaced')

corrs_wide_ed_P <- corrs_long_ed_P |>
  tidyr::pivot_wider(names_from = Ex_Response_Variable, values_from = 'Correlation (95% CI)') |>
  dplyr::mutate(group = 'ED', Condition = 'Prescribed')

# bind them all together
corrs_wide_all <- dplyr::bind_rows(corrs_wide_control_SP, corrs_wide_control_P, corrs_wide_ed_SP, corrs_wide_ed_P)

# put group and condition first
corrs_wide_all <- corrs_wide_all |>
  dplyr::select(group, Condition, everything())

knitr::kable(corrs_wide_all)
```

```{r, echo = FALSE, warning = FALSE, message=FALSE}

# Save all of the supplemental tables into an excel sheet called supplement
library(openxlsx)

wb <- createWorkbook()

addWorksheet(wb, "ST1-postshake_ttable")
writeData(wb, "ST1-postshake_ttable", milkshake_results_a, rowNames = FALSE)

addWorksheet(wb, "ST3-Affect_Descriptives")
writeData(wb, "ST3-Affect_Descriptives", affect_descriptives, rowNames = FALSE)

# Add more sheets for other dataframes
addWorksheet(wb, "ST4-Affect_Models")
writeData(wb, "ST4-Affect_Models", affect_models_summary, rowNames = FALSE)

addWorksheet(wb, "ST5-Affect_ModelFit_Indices")
writeData(wb, "ST5-Affect_ModelFit_Indices", AMFI, rowNames = FALSE)

addWorksheet(wb, "ST6-Affect_HOV")
writeData(wb, "ST6-Affect_HOV", affect_hov_results, rowNames = FALSE)

addWorksheet(wb, "ST7-Affect_Models_ED")
writeData(wb, "ST7-Affect_Models_ED", affect_models_ed_summary, rowNames = FALSE)

addWorksheet(wb, "ST8-BISS_Models")
writeData(wb, "ST8-BISS_Models", biss_models_summary, rowNames = FALSE)

addWorksheet(wb, "ST9-BISS_ModelFit_Indices")
writeData(wb, "ST9-BISS_ModelFit_Indices", BMFI, rowNames = FALSE)

addWorksheet(wb, "ST10-BISS_HOV")
writeData(wb, "ST10-BISS_HOV", biss_hov_results, rowNames = FALSE)

addWorksheet(wb, "ST11-BISS_Models_ED")
writeData(wb, "ST11-BISS_Models_ED", biss_models_ed_summary, rowNames = FALSE)

addWorksheet(wb, "ST12-BiomarkerChange")
writeData(wb, "ST12-BiomarkerChange", supplement_ttable, rowNames = FALSE)

addWorksheet(wb, "ST13-BiomarkerChange_ED")
writeData(wb, "ST13-BiomarkerChange_ED", ed_biomarkers, rowNames = FALSE)

addWorksheet(wb, "ST14-ExResponseCorrelations")
writeData(wb, "ST14-ExResponseCorrelations", cor_ci_results_wide, rowNames = FALSE)

addWorksheet(wb, "ST15-FullResponseCorrelations")
writeData(wb, "ST15-FullResponseCorrelations", corrs_wide_all, rowNames = FALSE)


# Save the workbook
saveWorkbook(wb, "Supplemental_Tables.xlsx", overwrite = TRUE)




```
